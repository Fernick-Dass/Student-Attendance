{"version":3,"sources":["redux/actionTypes.js","redux/validation/is-empty.js","redux/reducer/facultyReducer.js","redux/reducer/adminReducer.js","redux/reducer/studentReducer.js","redux/reducer/errorReducerHelper.js","redux/reducer/errorReducer.js","redux/reducer/rootReducer.js","redux/store.js","redux/utils/setAuthToken.js","redux/action/facultyAction.js","redux/action/adminAction.js","redux/action/studentAction.js","Pages/LoginPage.jsx","Components/HomeHelper.jsx","Pages/StudentHome.jsx","Pages/StudentDetails.jsx","Pages/Chat.jsx","Components/FacultyHomeHelper.jsx","Pages/FacultyInterface.jsx","Pages/AttendenceFaculty.jsx","Components/AdminHomeHelper.jsx","Pages/AdminAddStudent.jsx","Pages/AdminAddFaculty.jsx","Pages/AdminAddSubject.jsx","Pages/StudentAttendencePage.jsx","Pages/FacultyStudentLoginPags.jsx","Pages/StudentUpdatePassword.jsx","Pages/FacultyUpdatePassword.jsx","Pages/ForgotPassword.jsx","Pages/RecieverUserDetails.jsx","Pages/StudentUpdateProfile.jsx","Pages/Student/StudentSubjectList.jsx","Pages/Faculty/FacultyUploadMarks.jsx","Pages/Faculty/FacultyUpdateProfile.jsx","Pages/Student/StudentTestPerformance.jsx","Pages/Admin/AdminAddAdmin.jsx","Pages/Admin/AdminGetAllFaculty.jsx","Pages/Admin/AdminGetAllStudents.jsx","Pages/Admin/AdminGetAllSubjects.jsx","Pages/Admin/AdminHome.jsx","App.js","index.js"],"names":["SET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","faculty","flag","updateProfileFlag","allSubjectCodeList","fetchedStudents","fetchedStudentsHelper","facultyReducer","state","arguments","action","type","_objectSpread","payload","_defineProperty","admin","adminAddFacultyFlag","adminAddStudentFlag","adminAddAdminFlag","adminAddSubjectFlag","allSubject","allFaculty","allStudent","adminReducer","student","alongsideStudent","chatHistory","regNumStudent","privateChat","privateChat2","newerChats","previousChats","allSubjects","attendence","allMarks","studentReducer","setErrorsHelper","setErrors","combineReducers","error","errorReducer","errorHelper","errorReducerHelper","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","setAuthToken","token","axios","defaults","headers","common","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","setFaculty","data","url","fetchStudentsHelper","subjectCodeListHelper","fetchStudents","department","year","section","_ref5","_asyncToGenerator","_callee5","dispatch","_yield$axios4","_context5","subjectCode","t0","response","_x5","facultyUpdateProfileFlag","facultyUpdate","updatedData","_ref6","_callee6","_yield$axios5","_context6","console","log","message","_x6","facultyLogout","localStorage","removeItem","setAdmin","adminGetAllFacultyHelper","adminGetAllStudentHelper","adminGetAllSubjectHelper","adminLogout","setStudent","getStudentByRegNameHelper","privateConversation","privateConversation2","newerChatsHelper","previousChatsHelper","getAllSubjectsHelper","fetchAttendenceHelper","getMarksHelper","studentUpdate","_callee12","_yield$axios11","_context12","studentLogout","LoginPage","_React$createElement","useSelector","useDispatch","_useState","useState","_useState2","_slicedToArray","registrationNumber","setRegistrationNumber","_useState3","_useState4","password","setPassword","_useState5","_useState6","setError","_useState7","_useState8","isLoading","setIsLoading","history","useHistory","useEffect","React","createElement","className","noValidate","onSubmit","e","adminCredential","preventDefault","_ref","_callee","_yield$axios","decoded","_context","setItem","jwt_decode","_x","htmlFor","onChange","target","classnames","id","class","role","Home","setName","receiverName","senderName","_ref11","_callee11","_yield$axios10","_context11","concat","_x10","_ref10","_callee10","_yield$axios9","_context10","_x9","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","toUpperCase","aria-haspopup","aria-labelledby","style","listStyle","onClick","Fragment","HomeHelper","width","src","avatar","alt","email","dob","batch","gender","studentMobileNumber","aadharCard","fatherName","fatherMobileNumber","socket","StudentDetails","setDepartment","setYear","setSection","_useState9","_useState10","setResult","filterStudentHelper","filterByNameHelper","_ref2","_callee2","_yield$axios2","_context2","formHandler","placeholder","map","res","index","scope","senderRegistrationNumber","receiverRegistrationNumber","FacultyInterface","FacultyHomeHelper","designation","joiningYear","facultyMobileNumber","AttendenceFaculty","setSubjectCode","checkedValue","setCheckedValue","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","isLoading2","setIsLoading2","handleInputChange","tempCheck","checked","indexOf","splice","classNameName","selectedStudents","_ref7","_callee7","_context7","alert","_x7","markAttendence","required","subjectCodeName","_id","AdminAddStudent","setEmail","setDob","setGender","setContactNumber","setFatherName","_useState19","_useState20","setFatherContactNumber","_useState21","_useState22","setAadharCard","_useState23","_useState24","_useState25","_useState26","AdminHomeHelper","studentCredential","split","join","_ref4","_callee4","_context4","_x4","AdminAddFaculty","setDesignation","facultyMobileNUmber","setFacultyMobileNumber","facultyCredential","_ref3","_callee3","_context3","_x3","AdminAddSubject","subjectName","setSubjectName","totalLectures","setTotalLectures","subjectCredential","_ref14","_callee14","_yield$axios13","_context14","_x12","maxHours","lectureAttended","absentHours","totalLecturesByFaculty","FacultyStudentLoginPags","facultyRegNum","setFacultyRegNum","facultyPassword","setFacultyPassword","studentRegNum","setStudentRegNum","studentPassword","setStudentPassword","errors","errorsHelper","isFacultyLoading","setIsFacultyLoading","isStudentLoading","setIsStudentLoading","backgroundColor","borderRadius","padding","StudentUpdatePassword","_React$createElement2","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordData","_x2","FacultyUpdatePassword","withRouter","props","user","setUser","otp","setOtp","helper","setHelper","match","params","newPasswordWithOtp","submitOTPStudent","_yield$axios3","submitOTPFaculty","studentEmail","getOTPFaculty","aria-describedby","Chat","room1","setRoom1","room2","setRoom2","setReceiverRegistrationNumber","setMessage","messageArray","setMessageArray","olderMessages","setOlderMessages","ENDPOINT","temp","room","io","tempArr","input","value_1","value_2","swap","tempRoom2","roomId","_ref8","_callee8","_yield$axios7","_context8","_ref9","_callee9","_yield$axios8","_context9","_x8","getPrivateConversation2","emit","on","_toConsumableArray","off","sender","messageObj","senderId","messageobj","createdAt","RecieverUserDetails","getStudentByRegName","setAvatar","setModal","formData","FormData","append","accept","files","img","StudentSubjectList","_ref13","_callee13","_yield$axios12","_context13","_x11","FacultyUploadMarks","marks","setMarks","totalMarks","setTotalMarks","exam","setExam","setErrorHelper","uploadMarks","newMarks","findIndex","m","StudentTestPerformance","_ref15","_callee15","_yield$axios14","_context15","_x13","CycleTest1","subject","CycleTest2","Semester","toFixed","AdminAddAdmin","contactNumber","adminCredentails","AdminGetAllFaculty","form-inline","adminGetAllFaculty","searchCredentials","AdminGetAllSubjects","adminGetAllSubject","AdminHome","window","facultyJwtToken","currentTime","Date","now","exp","location","studentJwtToken","setStudentUser","adminJwtToken","setAdminUser","App","Router","Switch","Route","exact","path","component","StudentUpdateProfile","facultyInterface","AdminGetAllStudent","AdminGetAllSubject","StudentAttendencePage","StudentTestPerformace","FacultyUpdateProfile","ForgotPassword","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.516330dd.chunk.js","sourcesContent":["//ERROR\nexport const SET_ERRORS = \"SET_ERRORS\"\nexport const SET_ERRORS_HELPER = \"SET_ERRORS_HELPER\"\nexport const SET_FLAG = \"SET_FLAG\"\n\n//ADMIN\nexport const SET_ADMIN = \"SET_ADMIN\"\nexport const GET_SUBJECTS = \"GET_SUBJECTS\"\n\n\n\n//FACULTY\nexport const SET_FACULTY = \"SET_FACULTY\"\nexport const FACULTY_UPDATE_PASSWORD = \"FACULTY_UPDATE_PASSWORD\"\n\n//STUDENT\nexport const SET_STUDENT = \"SET_STUDENT\"\nexport const STUDENT_UPDATE_PASSWORD = \"STUDENT_UPDATE_PASSWORD\"\nexport const SET_OTP = \"SET_OTP\"\n\n\n","const isEmpty = value =>\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","\nimport { SET_FACULTY } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    faculty: {},\n    flag: false,\n    updateProfileFlag: false,\n    allSubjectCodeList: [],\n    fetchedStudents: [],\n    fetchedStudentsHelper: true\n}\n\n\nconst facultyReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACULTY: {\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                faculty: action.payload\n            }\n        }\n        case \"FETCH_STUDENTS\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: false,\n                fetchedStudents: action.payload\n            }\n        }\n        case \"FACULTY_UPDATE_PROFILE_FLAG\": {\n            return {\n                ...state,\n                updateProfileFlag: action.payload\n            }\n        }\n        case \"GET_SUBJECTCODE_LIST\": {\n            return {\n                ...state,\n                allSubjectCodeList: action.payload\n            }\n        }\n        case \"HELPER\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default facultyReducer","\nimport { SET_ADMIN, GET_SUBJECTS } from '../actionTypes'\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    admin: {},\n    adminAddFacultyFlag: false,\n    adminAddStudentFlag: false,\n    adminAddAdminFlag: false,\n    adminAddSubjectFlag: false,\n    allSubject: {},\n    allFaculty: [],\n    allStudent: [],\n    allSubject: []\n}\n\n\n\n\n\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ADMIN: \n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                admin: action.payload\n            }\n        case GET_SUBJECTS: {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        case \"ADMIN_ADD_FACULTY_FLAG\": {\n            return {\n                ...state,\n                adminAddFacultyFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_STUDENT_FLAG\": {\n            return {\n                ...state,\n                adminAddStudentFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_SUBJECT_FLAG\": {\n            return {\n                ...state,\n                adminAddSubjectFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_ADMIN_FLAG\": {\n            return {\n                ...state,\n                adminAddAdminFlag: action.payload\n            }\n        }\n        case \"GET_ALL_FACULTY\": {\n            return {\n                ...state,\n                allFaculty: action.payload\n            }\n        }\n        case \"GET_ALL_STUDENT\": {\n            return {\n                ...state,\n                allStudent: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECT\": {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n\nexport default adminReducer","\nimport { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    student: {},\n    alongsideStudent: {},\n    flag: false,\n    chatHistory: [],\n    regNumStudent: {},\n    privateChat: [],\n    privateChat2: [],\n    newerChats: [],\n    previousChats: [],\n    allSubjects: [],\n    attendence: [], \n    allMarks: {}\n}\n\n\nconst studentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STUDENT:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                student: action.payload\n            }\n        case \"CHAT_HELPER\":\n            return {\n                ...state,\n                alongsideStudent: action.payload\n            }\n        case SET_FLAG:\n            return {\n                ...state,\n                flag: true\n            }\n        case \"SET_CHAT\":\n            return {\n                ...state, \n                chatHistory : [state.chatHistory, action.payload]\n            }\n        case \"GET_STUDENT_BY_REG_NUM\": {\n            return {\n                ...state,\n                regNumStudent: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION\": {\n            return {\n                ...state,\n                privateChat: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION2\": {\n            return {\n                ...state,\n                privateChat2: action.payload\n            }\n        }\n        case \"GET_NEWER_CHATS\": {\n            return {\n                ...state,\n                newerChats: action.payload\n            }\n        }\n        case \"GET_PREVIOUS_CHATS\": {\n            return {\n                ...state,\n                previousChats: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECTS\": \n            return {\n                ...state,\n                allSubjects: action.payload\n            }\n        \n        case \"GET_ATTENDENCE\": \n            return {\n                ...state,\n                attendence: action.payload\n            }\n        \n        case \"GET_MARKS\": \n            return {\n                ...state,\n                allMarks: action.payload\n            }\n        \n        default:\n            return state\n        \n    } \n}\n\nexport default studentReducer","import { SET_ERRORS_HELPER } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrorsHelper = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS_HELPER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default setErrorsHelper\n\n\n","import { SET_ERRORS } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrors = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default setErrors\n\n\n","import { combineReducers } from 'redux';\nimport facultyReducer from './facultyReducer'\nimport adminReducer from './adminReducer'\nimport studentReducer from './studentReducer'\nimport errorReducerHelper from './errorReducerHelper'\nimport errorReducer from './errorReducer'\n\n\nexport default combineReducers({\n    faculty: facultyReducer,\n    admin: adminReducer,\n    student: studentReducer,\n    error: errorReducer,\n    errorHelper: errorReducerHelper\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n\n\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\n\nconst setFaculty = (data) => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    }\n}\n\nconst url = \"http://localhost:5000\"\n\nconst fetchStudentsHelper = (data) => {\n    return {\n        type: \"FETCH_STUDENTS\",\n        payload: data\n    }\n}\n\nconst subjectCodeListHelper = (data) => {\n    return {\n        type: \"GET_SUBJECTCODE_LIST\",\n        payload: data\n    }\n}\n\n\nexport const facultyLogin = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/login\",\n                data: facultyCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('facultyJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setFaculty(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const facultyUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const getOTPFaculty = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/faculty/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({ type: SET_FLAG })\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/postOTP\",\n                data: newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const fetchStudents = (department, year, section) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/fetchStudents\",\n                data: { department, year, section}\n            })\n            dispatch(fetchStudentsHelper(data.result))\n            dispatch(subjectCodeListHelper(data.subjectCode))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nconst facultyUpdateProfileFlag = (data) => {\n    return {\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\n        payload: data\n    }\n}\n\nexport const facultyUpdate = (updatedData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/faculty/updateProfile`,\n                data: updatedData\n            })\n            dispatch(facultyUpdateProfileFlag(true))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const markAttendence = (selectedStudents, subjectCode, department, year,\n           section) => {\n    return async(dispatch) => {\n        try {\n                await axios({\n                method: 'Post',\n                    url: url + \"/api/faculty/markAttendence\",\n                data: { selectedStudents, subjectCode, department, year, section}\n                })\n            alert(\"attendence has been marked successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n        }\n        catch (err) {\n           console.log(\"Error in marking attendence, faculty action\", err.message)\n        }\n    }\n}\n\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\n    department, year, section, ) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/uploadMarks\",\n                data: {\n                    subjectCode, exam, totalMarks, marks, department, year, section,\n                    }\n            })\n            alert(\"Mark uploaded successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setFacultyUser = data => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    };\n}\n\nexport const facultyLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('facultyJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setFaculty({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport {\n    SET_ADMIN, SET_ERRORS, \n    GET_SUBJECTS\n} from '../actionTypes'\n\nconst url = \"http://localhost:5000\"\n\nconst setAdmin = (data) => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    }\n}\n\nconst adminAddFacultyFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_FACULTY_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddStudentFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_STUDENT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddSubjectFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_SUBJECT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddAdminFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_ADMIN_FLAG\",\n        payload: data\n    }\n}\n\nconst getSubjctsHelper = (data) => {\n    return {\n        type: GET_SUBJECTS,\n        payload: data\n    }\n}\n\nconst adminGetAllFacultyHelper = (data) => {\n    return {\n        type: \"GET_ALL_FACULTY\",\n        payload: data\n    }   \n}\n\nconst adminGetAllStudentHelper = (data) => {\n    return {\n        type: \"GET_ALL_STUDENT\",\n        payload: data\n    }\n}\n\n\nconst adminGetAllSubjectHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECT\",\n        payload: data\n    }\n}\n\nexport const adminLogin = (adminCredential) => {\n    return async (dispatch) => {\n        try {\n            console.log(\"Admin Login Credentials\", adminCredential)\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/login\",\n                data: adminCredential\n            })\n            console.log(\"login response\", data)\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('adminJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setAdmin(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/admin/getSubjects\",\n            })\n            dispatch(getSubjctsHelper(data))\n        }\n        catch (err) {\n            console.log(\"Error in getting all subjects\", err.message)\n        }\n    }\n}\n\nexport const adminAddFaculty = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addFaculty\",\n                data: facultyCredential\n            })\n            dispatch(adminAddFacultyFlag(true))\n            alert(\"Faculty Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddStudent = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addStudent\",\n                data: studentCredential\n            })\n            dispatch(adminAddStudentFlag(true))\n            alert(\"Student Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddSubject = (subjectCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addSubject\",\n                data: subjectCredential\n            })\n            dispatch(adminAddSubjectFlag(true))\n            alert(\"Subject Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminAddAdmin = (adminCredentails) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addAdmin\",\n                data: adminCredentails\n            })\n            dispatch(adminAddAdminFlag(true))\n            alert(\"Admin Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminGetAllFaculty = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllFaculty\",\n                data: department\n            })\n            dispatch(adminGetAllFacultyHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllStudent = (searchCredentials) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllStudent\",\n                data: searchCredentials\n            })\n            dispatch(adminGetAllStudentHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubject = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllSubject\",\n                data: department\n            })\n            dispatch(adminGetAllSubjectHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setAdminUser = data => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    };\n}\n\nexport const adminLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('adminJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setAdmin({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_STUDENT, SET_ERRORS_HELPER, SET_ERRORS, STUDENT_UPDATE_PASSWORD, SET_OTP, SET_FLAG } from '../actionTypes'\n\nconst url = \"http://localhost:5000\"\n\nexport const setChatHistory = (data) => {\n    return {\n        type: \"SET_CHAT\",\n        payload: data\n    }\n}\n\nconst setStudent = (data) => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    }\n}\n\nconst chatHelp = (data) => {\n    return {\n        type: \"CHAT_HELPER\",\n        payload: data\n    }\n}\n\nconst getStudentByRegNameHelper = (data) => {\n    return {\n        type: \"GET_STUDENT_BY_REG_NUM\",\n        payload: data\n    }\n}\n\n\nconst privateConversation = (data) => {\n    return {\n        type: \"GET_PRIVATE_CONVERSATION\",\n        payload: data\n    }\n}\n\nconst privateConversation2 = (data) => {\n    return {\n        type: \"GET_PRIVATE_CONVERSATION2\",\n        payload: data\n    }\n}\n\nconst newerChatsHelper = (data) => {\n    return {\n        type: \"GET_NEWER_CHATS\",\n        payload: data\n    }\n}\n\nconst previousChatsHelper = (data) => {\n    return {\n        type: \"GET_PREVIOUS_CHATS\",\n        payload: data\n    }\n}\n\nconst getAllSubjectsHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECTS\",\n        payload: data\n    }\n}\n\nconst fetchAttendenceHelper = (data) => {\n    return {\n        type: \"GET_ATTENDENCE\",\n        payload: data\n    }\n}\n\nconst getMarksHelper = (data) => {\n    return {\n        type: \"GET_MARKS\",\n        payload: data\n    }\n    \n}\n\nexport const studentLogin = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/login\",\n                data: studentCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('studentJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setStudent(decoded))\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const studentUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const chatHelper = (name) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/getStudentByName\",\n                data: name\n            })\n            dispatch(chatHelp(data.result))\n        }\n        catch (err) {\n            console.log('error in recent',err.message)\n        }\n    }\n}\n\nexport const getStudentByRegName = (registrationNumber) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/getStudentByRegName\",\n                data: { registrationNumber }\n            })\n            dispatch(getStudentByRegNameHelper(data.result))\n        }\n        catch (err) {\n            console.log('Error in getting student by registration number', err.message)\n        }\n    }\n    \n}\n\n\nexport const getOTPStudent = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/student/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({type:SET_FLAG})\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPStudent = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/postOTP\" ,\n                data:newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err){\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const sendMessage = (room,messageobj) => {\n    return async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/student/chat/${room}`,\n                data: messageobj\n            })\n        }\n        catch (err) {\n            console.log(\"Error in sending message\",err.message)\n        }\n    }\n}\n\n\nexport const getPrivateConversation = (roomId) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/${roomId}`,\n            })\n            dispatch(privateConversation(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const getPrivateConversation2 = (roomId) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/${roomId}`,\n            })\n            dispatch(privateConversation2(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const previousChats = (senderName) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/previousChats/${senderName}`,\n            })\n            dispatch(previousChatsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\n\nexport const newerChats = (receiverName) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/newerChats/${receiverName}`,\n            })\n            dispatch(newerChatsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const studentUpdate = (updatedData) => {\n    return async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/student/updateProfile`,\n                data: updatedData\n            })\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const getAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getAllSubjects\"\n            })\n            dispatch(getAllSubjectsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const fetchAttendence = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/checkAttendence\"\n            })\n            dispatch(fetchAttendenceHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    \n    }\n}\n\nexport const getMarks = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getMarks\"\n            })\n           dispatch(getMarksHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in getting marks\", err.message)\n        }\n    }\n}\n\n\n\nexport const setStudentUser = data => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    };\n}\n\nexport const studentLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('studentJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setStudent({}));\n    };","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminLogin } from '../redux/action/adminAction'\nimport classnames from 'classnames'\n\n\n\nconst LoginPage = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch( )\n    const [registrationNumber, setRegistrationNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n    useEffect(() => {\n        if (store.admin.isAuthenticated) {\n            history.push('/admin')\n        }\n    }, [store.admin.isAuthenticated])\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const fromHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminLogin({registrationNumber, password}))\n       \n    }\n\n    useEffect(() => {\n        if (store.error ||\n            store.admin.isAuthenticated) {\n            setIsLoading(false)\n        }\n        \n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.isAuthenticated])\n\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\n                        <div>\n                            <h1 className=\"display-4 text-center\">ADMIN</h1>\n                            <form noValidate onSubmit={fromHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Registration Number</label>\n                                    <input onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\n                                        {'is-invalid' : error.registrationNumber\n                                        \n                                        })} id=\"emailId\" />\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">Password</label>\n                                    <input onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": error.password\n                                    })} value={password} type=\"password\" id=\"passwordId\" />\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n    )\n}\n\nexport default LoginPage\n","import React, {useState, useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { studentLogout, newerChats, previousChats} from '../redux/action/studentAction'\n\n\nconst Home = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n        if (store.student.student.student.name) {\n            setName(store.student.student.student.name)\n        }\n    }, [store.student.student.student.name])\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(newerChats(store.student.student.student.name))\n        dispatch(previousChats(store.student.student.student.name))\n    }, [store.student.newerChats.length])\n    const logoutHandler = () => {\n        dispatch(studentLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">RVS-CAS</h4>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        ACADEMIC </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                        <Link className=\"dropdown-item\" to=\"/student/testPerformance\">Test Performance</Link>\n                                        <Link className=\"dropdown-item\" to=\"/student/attendence\">Attendance</Link>\n                                        <Link className=\"dropdown-item\" to=\"/student/getAllSubjects\">Student Subject List</Link>\n                                    </div>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\"><li>STUDENTS</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\"><li>NEW CONVERSATION ({store.student.newerChats.length})</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                               \n                            </ul>\n                           \n                        </div>\n                        <div>\n                            <button style={{listStyle:\"none\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React,{useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport HomeHelper from '../Components/HomeHelper'\n\nconst Home = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8 mt-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.student.student.student.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.student.student.student.name}</h5>\n                                            <h5 className=\"card-title\">{store.student.student.student.registrationNumber}</h5>\n                                            <Link to='/student/updateProfile'>UPDATE PROFILE</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7 bg-dark  text-white\">\n                                    <table className=\"table \">\n                                        <tbody className=\"text-white\">\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.student.student.student.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.student.student.student.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.student.student.student.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date Of Birth</td>\n                                                <td>{store.student.student.student.dob}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Year</td>\n                                                <td>{store.student.student.student.year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.student.student.student.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Section</td>\n                                                <td>{store.student.student.student.section}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Batch</td>\n                                                <td>{store.student.student.student.batch}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Gender</td>\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender : \n                                                \n                                                   \"NA\"\n                                                }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.student.student.student.studentMobileNumber ?\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Aadhar Card</td>\n                                                <td>{store.student.student.student.aadharCard ? store.student.student.student.aadharCard : \"NA\"} </td>\n                                            </tr>\n                                            <tr>\n                                                <td>Father Name</td>\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Father Contact Number</td>\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </> : (history.push('/'))}\n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n// import {newerChats, previousChats} from '../redux/action/studentAction'\nimport axios from 'axios'\nimport HomeHelper from '../Components/HomeHelper'\nimport {Link, useHistory } from 'react-router-dom'\n\nconst StudentDetails = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [result, setResult] = useState([])\n\n\n\n    \n\n\n    const filterStudentHelper = async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: 'https://apna-erp.herokuapp.com/api/student/getAllStudents',\n                data: {\n                    department,\n                    year,\n                    section\n                }\n            })\n            setResult(data.result)\n        }\n        catch (err) {\n            console.log(\"Error in student register action\", err.message)\n        }\n    }\n\n    const filterByNameHelper = async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: 'https://apna-erp.herokuapp.com/api/student/getStudentByName',\n                data: {\n                    name\n                }\n            })\n            setResult(data.result)\n        }\n        catch (err) {\n            console.log(\"Error in student register action\", err)\n        }\n    }\n    \n\n    const formHandler = (e) => {\n        e.preventDefault()\n        if (name) {\n            filterByNameHelper()\n        }\n        else {\n            filterStudentHelper()\n        }\n    }\n  \n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    {result.length === 0 && <div className=\"row\">\n                        <div className=\"col-md-3 border mt-4\">\n                            <div className=\"row mt-3\">\n                                <div className=\"col mb-2\">\n                                    <form className=\"form-inline\" onSubmit={formHandler}>\n                                        <div className=\"form-group \">\n                                            <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Search by name\" type=\"text\" className=\"form-control\" />\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-block btn-info mt-1 \">Search</button>\n                                    </form>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4 mb-4 \">\n                                <div className=\"col\">\n                                    <form noValidate onSubmit={formHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"branchId\">Branch</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className=\"form-control\" id=\"bramchId\">\n                                                <option>Select</option>\n                                                <option value=\"MCA\">MCA</option>\n                                                <option value=\"MBA\" >MBA</option>\n                                                <option value=\"M.TECH\">M.TECH</option>\n                                                <option value=\"M.COM\">M.COM</option>\n                                                <option value=\"M.ARCH\">M.ARCH</option>\n                                                <option value=\"M.ED\">M.ED</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className=\"form-control\" id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <select onChange={(e) => setSection(e.target.value)} className=\"form-control\" id=\"sectionId\">\n                                                <option>Select</option>\n                                                <option value=\"A\">A</option>\n                                                <option value=\"B\">B</option>\n                                                <option value=\"C\">C</option>\n                                                <option value=\"D\">D</option>\n                                                <option value=\"E\">E</option>\n                                                <option value=\"F\">F</option>\n                                            </select>\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-info btn-block\">Search</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-9 border mt-4\">\n                            <div className=\"row justify-content-center \">\n                                <div className=\"col\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6 border\">\n                                            <h4 className=\"text-center\">New Chats</h4>\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    {\n                                                        store.student.newerChats.map((res, index) =>\n                                                            <tr key={index}>\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                <td>{res.senderName}</td>\n                                                                <td><Link to={`/student/${res.senderRegistrationNumber}`}>Explore</Link></td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        <div className=\"col-md-6 border\">\n                                            <h4 className=\"text-center\">Older Chats</h4>\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    {\n                                                        store.student.previousChats.map((res, index) =>\n                                                            <tr key={index}>\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                <td>{res.receiverName}</td>\n                                                                <td><Link to={`/student/${res.receiverRegistrationNumber}`}>Explore</Link></td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                </tbody>\n                                            </table>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>}\n\n                    {result.length !== 0 && <div className=\"row\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Chat</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {result.map((obj, index) =>\n                                        <tr key={index}>\n                                            <th scope=\"row\">{index + 1}</th>\n                                            <td>{obj.registrationNumber}</td>\n                                            <td>{obj.name}</td>\n                                            <td><Link to={`/student/${obj.registrationNumber}`}>Explore</Link></td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>}\n\n                </div></> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default StudentDetails\n","import React, { useState, useEffect } from 'react'\nimport HomeHelper from '../Components/HomeHelper'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sendMessage, getPrivateConversation, getPrivateConversation2} from '../redux/action/studentAction'\nimport io from 'socket.io-client';\nimport { useHistory } from 'react-router-dom';\n\n//Swap HelperFunction\nfunction swap(input, value_1, value_2) {\n    var temp = input[value_1];\n    input[value_1] = input[value_2];\n    input[value_2] = temp;\n}\n\n\nlet socket;\n\n\nconst Chat = (props) => {\n    \n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [room1, setRoom1] = useState(\"\")\n    const [room2, setRoom2] = useState(\"\")\n    const [receiverRegistrationNumber, setReceiverRegistrationNumber] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [messageArray, setMessageArray] = useState([])\n    const [olderMessages, setOlderMessages] = useState([])\n    const ENDPOINT = 'https://apna-erp.herokuapp.com'\n\n    useEffect(() => {\n        let temp = props.match.params.room\n        socket = io(ENDPOINT)\n        let tempArr = temp.split(\".\")\n        setReceiverRegistrationNumber(tempArr[0])\n        setRoom1(temp)\n        swap(tempArr, 0, 1)\n        let tempRoom2 = tempArr[0] + '.' + tempArr[1]\n        setRoom2(tempRoom2)\n    }, [ENDPOINT, props.match.params.room])\n    \n\n    useEffect(() => {\n        dispatch(getPrivateConversation(room1))\n        dispatch(getPrivateConversation2(room2))\n        socket = io(ENDPOINT)\n        socket.emit('join room', {\n            room1,\n            room2\n        })\n        socket.on(\"new Message\", (data) => {\n            setMessageArray([...messageArray, data])\n        })\n        return () => {\n            socket.emit('disconnect')\n            socket.off()\n        }\n    }, [room1, room2])\n\n\n    \n    const formHandler = (e) => {\n        e.preventDefault()\n        if (message.trim().length > 0) {\n            socket.emit(\"private message\", {\n                sender: store.student.student.student.name,\n                message,\n                room: room1\n            })\n            setMessage(\"\")\n            let messageObj = {\n                roomId: room1,\n                senderName: store.student.student.student.name,\n                senderId: store.student.student.student._id,\n                message,\n                senderRegistrationNumber: store.student.student.student.registrationNumber,\n                receiverRegistrationNumber\n            }\n            dispatch(sendMessage(room1,messageObj))\n        }\n        else {\n            alert(\"Can't send empty message\")\n        }\n    }\n\n\n    useEffect(() => {\n        socket.on(\"new Message\", (data) => {\n            setOlderMessages(store.student.privateChat)\n            setMessageArray([...messageArray, data])\n        })\n        \n    },[messageArray,olderMessages])\n   \n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-5\">\n                            <form className=\"form-inline\" onSubmit={formHandler}>\n                                <div className=\"form-group \">\n                                    {/* <input value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" /> */}\n                                    <textarea value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" />\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary ml-1 \">Send</button>\n                            </form>\n                        </div>\n                        <div className=\"col-md-7\">\n                            {\n                                store.student.privateChat.map((obj,index) =>\n                                    <div key={index}>\n                                        <p>{obj.senderName}: {obj.message}, {obj.createdAt}</p>\n                                    </div>\n                                )\n                            }\n                            {messageArray.map((obj, index) =>\n                                <p key={index}>{obj.sender}: {obj.message}</p>\n                            )}\n\n                        </div>\n\n                    </div>\n\n                </div>\n            </> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default Chat\n","import React, {useState,useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector} from 'react-redux'\nimport {facultyLogout} from '../redux/action/facultyAction'\n\n\n\nconst Home = () => {\n    const store = useSelector((store)=>store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n\n        if (store.faculty.faculty.faculty.name) {\n            setName(store.faculty.faculty.faculty.name)\n        }\n    }, [store.faculty.faculty.faculty.name])\n    const logoutHandler = () => {\n        dispatch(facultyLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            {/* <Header /> */}\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">RVS-CAS</h4>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/attendenceFaculty\"><li>MARK ATTENDANCE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/uploadMarks\"><li>UPLOAD MARKS</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <div>\n                            <button style={{listStyle:\"None\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\n\n\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\n\n\nconst FacultyInterface = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    return (\n        <>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"row\">\n                                <div className=\"col-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.faculty.faculty.faculty.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.name}</h5>\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.registrationNumber}</h5>\n                                            <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.faculty.faculty.faculty.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.faculty.faculty.faculty.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.faculty.faculty.faculty.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date Of Birth</td>\n                                                <td>{store.faculty.faculty.faculty.dob}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Designation</td>\n                                                <td>{store.faculty.faculty.faculty.designation}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.faculty.faculty.faculty.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.faculty.faculty.faculty.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Gender</td>\n                                                <td>{store.faculty.faculty.faculty.gender ? store.faculty.faculty.faculty.gender :\n\n                                                    \"NA\"\n                                                }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.faculty.faculty.faculty.facultyMobileNumber ?\n                                                    store.faculty.faculty.faculty.facultyMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </> : (history.push('/'))}\n           \n        </>\n\n\n    )\n}\n\nexport default FacultyInterface\n","import React, { useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport {fetchStudents,markAttendence } from '../redux/action/facultyAction'\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\nconst AttendenceFaculty = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [checkedValue, setCheckedValue] = useState([])\n    const [error, setError] = useState({})\n    const [flag, setFlag] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isLoading2, setIsLoading2] = useState(false)\n\n    const handleInputChange = (e) => {\n        const tempCheck = checkedValue\n        let index\n        if (e.target.checked)\n        {\n            tempCheck.push(e.target.value)\n        }\n        else {\n            index = tempCheck.indexOf(e.target.value)\n            tempCheck.splice(index,1)\n        }\n        setCheckedValue(tempCheck)\n    }\n    \n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(fetchStudents(department, year, section))\n       \n    }\n\n    useEffect(() => {\n        if (store.error || !store.faculty.fetchedStudentsHelper) {\n            setIsLoading(false)\n        }\n        \n    }, [store.error, store.faculty.fetchedStudentsHelper])\n\n \n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        setIsLoading2(true)\n        dispatch(markAttendence(checkedValue, subjectCode, department, year, section))\n        setCheckedValue([])\n        \n    }\n\n    useEffect(() => {\n        if (store.faculty.fetchedStudentsHelper) {\n            setIsLoading2(false)\n        }\n        \n    },[store.faculty.fetchedStudentsHelper])\n    \n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"branchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                           \n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Search</button>}\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select required onChange={(e) => setSubjectCode(e.target.value)} className=\"form-control\" id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                            </div>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <td><div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        </div></td>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value={obj._id} onChange={handleInputChange} id=\"defaultCheck1\" />\n                                                </div></td>\n                                                <td key={index}>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading2 && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading2 && <button type=\"submit\" className=\"btn btn-info ml-1  \">Submit</button>}\n                        </form>\n                    </div>\n                </div>\n                }</> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default AttendenceFaculty\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { adminLogout } from '../redux/action/adminAction'\n\n\nconst Home = () => {\n    const store = useSelector(store => store)\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n\n        if (store.admin.admin.name) {\n            setName(store.admin.admin.name)\n        }\n    }, [store.admin.admin.name])\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const logoutHandler = () => {\n        dispatch(adminLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n          \n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <h4 className=\"navbar-brand mt-1\" href=\"\">RVS</h4>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item active\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin\"><li>{name.toUpperCase()}</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addFaculty\"><li>ADD FACULTY</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addStudent\"><li>ADD STUDENT</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addSubject\"><li>ADD SUBJECT</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addAdmin\"><li>ADD ADMIN</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allFaculties\"><li>OUR FACULTIES</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allStudents\"><li>OUR STUDENTS</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allSubject\"><li>SUBJECTS</li></Link></button>\n                        </li>\n\n                    </ul>\n                </div>\n                <div>\n\n                    <button style={{ listStyle: \"None\" }} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddStudent } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddStudent = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [section, setSection] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddStudent({\n            name,\n            email,\n            year,\n            department,\n            fatherName,\n            aadharCard,\n            gender,\n            section: section.toUpperCase(),\n            dob: dob.split(\"-\").reverse().join(\"-\"),\n            studentMobileNumber,\n            fatherMobileNumber\n        }))\n    } \n    useEffect(() => {\n        if (store.admin.adminAddStudentFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddStudentFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddStudentFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddStudentFlag])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Student Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"MCA\">MCA</option>\n                                                <option value=\"MBA\">MBA</option>\n                                                <option value=\"M.TECH\">M.TECH</option>\n                                                <option value=\"M.COM\">M.COM</option>\n                                                <option value=\"M.ARCH\">M.ARCH</option>\n                                                <option value=\"M.ED\">M.ED</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.year\n                                                })} id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                        </div>\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.section\n                                                })} id=\"sectionId\" />\n                                            {error.section && (<div className=\"invalid-feedback\">{error.section}</div>)}\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fatherId\">Father Name</label>\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>:(history.push('/'))}\n            \n            </div>\n\n            \n      \n    )\n}\n\nexport default AdminAddStudent\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddFaculty } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddFaculty = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [designation, setDesignation] = useState('')\n    const [facultyMobileNUmber, setFacultyMobileNumber] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n           setError(store.error)\n       }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddFaculty({\n            name,\n            email,\n            designation,\n            facultyMobileNUmber,\n            department,\n            aadharCard,\n            gender,\n            dob: dob.split(\"-\").reverse().join(\"-\")}))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddFacultyFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddFacultyFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddFacultyFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    },[store.error,store.admin.adminAddFacultyFlag])\n    return (\n       \n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper/>\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Faculty Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"designationId\">Designation</label>\n                                            <select onChange={(e) => setDesignation(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.designation\n                                                })} id=\"designationId\">\n                                                <option>Select</option>\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\n                                                <option value=\"Senior Professer\">Senior Professer</option>\n                                            </select>\n                                            {error.designation && (<div className=\"invalid-feedback\">{error.designation}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"MCA\">MCA</option>\n                                                <option value=\"MBA\">MBA</option>\n                                                <option value=\"M.TECH\">M.TECH</option>\n                                                <option value=\"M.COM\">M.COM</option>\n                                                <option value=\"M.ARCH\">M.ARCH</option>\n                                                <option value=\"M.ED\">M.ED</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Add Faculty</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>):(history.push('/'))}\n            \n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddSubject } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\nconst AdminAddSubject = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [subjectName, setSubjectName] = useState('')\n    const [subjectCode, setSubjectCode] = useState('')\n    const [totalLectures, setTotalLectures] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddSubject({\n            subjectCode,\n            subjectName,\n            totalLectures,\n            department,\n            year\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddSubjectFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddSubjectFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddSubjectFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddSubjectFlag])\n\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <> <AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"d-flex justify-content-md-center vh-100\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"snameId\">Subject Name</label>\n                                        <input onChange={(e) => setSubjectName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.subjectName\n                                            })} id=\"snameId\" />\n                                        {error.subjectName && (<div className=\"invalid-feedback\">{error.subjectName}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"scodeId\">Subject Code</label>\n                                        <input onChange={(e) => setSubjectCode(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.subjectCode\n                                            })} id=\"scodeId\" />\n                                        {error.subjectCode && (<div className=\"invalid-feedback\">{error.subjectCode}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"totalLectures\">Total Lectures</label>\n                                        <input onChange={(e) => setTotalLectures(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.totalLectures\n                                            })} id=\"totalLectures\" />\n                                        {error.totalLectures && (<div className=\"invalid-feedback\">{error.totalLectures}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">Department</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"MCA\">MCA</option>\n                                            <option value=\"MBA\">MBA</option>\n                                            <option value=\"M.TECH\">M.TECH</option>\n                                            <option value=\"M.COM\">M.COM</option>\n                                            <option value=\"M.ARCH\">M.ARCH</option>\n                                            <option value=\"M.ED\">M.ED</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Subject</button>}\n                                   \n                                    \n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div></>: (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminAddSubject\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {fetchAttendence} from '../redux/action/studentAction'\n\nimport axios from 'axios'\nimport HomeHelper from '../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst Home = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n      dispatch(fetchAttendence())  \n    },[])\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Maximum Hours</th>\n                                        <th scope=\"col\">Present Hours</th>\n                                        <th scope=\"col\">Absent Hours</th>\n                                        <th scope=\"col\">Total Hours</th>\n                                        <th scope=\"col\">Attendence</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.attendence.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.maxHours}</td>\n                                                <td>{res.lectureAttended}</td>\n                                                <td>{res.absentHours}</td>\n                                                <td>{res.totalLecturesByFaculty}</td>\n                                                <td>{res.attendence}%</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n           \n            \n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, Link } from 'react-router-dom'\nimport { facultyLogin } from '../redux/action/facultyAction'\nimport { studentLogin } from '../redux/action/studentAction'\nimport classnames from 'classnames'\n\nimport '../Style/facultyStudentLogin.css'\n\n\n\n\nconst FacultyStudentLoginPags = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const [facultyRegNum, setFacultyRegNum] = useState('')\n    const [facultyPassword, setFacultyPassword] = useState('')\n    const [studentRegNum, setStudentRegNum] = useState('')\n    const [studentPassword, setStudentPassword] = useState('')\n    const [errors, setErrors] = useState({})\n    const [errorsHelper, setErrorsHelper] = useState({})\n    const [isFacultyLoading, setIsFacultyLoading] = useState(false)\n    const [isStudentLoading, setIsStudentLoading] = useState(false)\n\n\n    const history = useHistory()\n\n    useEffect(() => {\n        if (store.faculty.isAuthenticated) {\n            history.push('/faculty')\n        }\n    }, [store.faculty.isAuthenticated])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n    useEffect(() => {\n        if (store.student.isAuthenticated) {\n            history.push('/home')\n        }\n    }, [store.student.isAuthenticated])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorsHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n\n\n\n\n\n    const facultyFormHandler = (e) => {\n        e.preventDefault()\n        let registrationNumber;\n        let password;\n        setIsFacultyLoading(true)\n        dispatch(facultyLogin({ registrationNumber: facultyRegNum, password: facultyPassword }))\n    }\n\n    useEffect(() => {\n        if (store.error || store.faculty.isAuthenticated) {\n            setIsFacultyLoading(false)\n        }\n        else {\n            setIsFacultyLoading(true)\n        }\n    }, [store.error, store.faculty.isAuthenticated])\n\n    const studentFormHandler = (e) => {\n        e.preventDefault()\n        let registrationNumber;\n        let password;\n        setIsStudentLoading(true)\n        dispatch(studentLogin({ registrationNumber: studentRegNum, password: studentPassword }))\n    }\n\n    useEffect(() => {\n        if (store.errorHelper ||\n            store.student.isAuthenticated) {\n            setIsStudentLoading(false)\n        }\n        else {\n            setIsStudentLoading(false)\n        }\n\n    }, [store.errorHelper, store.student.isAuthenticated])\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\" id=\"trail\">\n                <div className=\"col-md-6\">\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\n                            <div>\n                                <h3 className=\"text-center \">FACULTY</h3>\n                                <form noValidate onSubmit={facultyFormHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"facRegId\">Registration Number</label>\n                                        <input onChange={(e) => setFacultyRegNum(e.target.value)} type=\"text\" value={facultyRegNum} className={classnames('form-control', {\n                                            'is-invalid': errors.registrationNumber\n                                        })}\n                                            id=\"facRegId\" />\n                                        {errors.registrationNumber && (\n                                            <div className=\"invalid-feedback\">{errors.registrationNumber}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"passwordFacId\">Password</label>\n                                        <input onChange={(e) => setFacultyPassword(e.target.value)} value={facultyPassword} className={classnames(\"form-control\", {\n                                            'is-invalid': errors.password\n                                        })}\n                                            type=\"password\" id=\"passwordFacId\" />\n                                        {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isFacultyLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n\n                                    {!isFacultyLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                                </form>\n                                <p className=\"text-center mt-2 \"><Link className=\"text-center\" to=\"/forgotPassword/faculty\">Forgot Password</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\n                            <div>\n                                <h3 className=\"text-center\">STUDENT</h3>\n                                <form noValidate onSubmit={studentFormHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"studentId\">Registration Number</label>\n                                        <input onChange={(e) => setStudentRegNum(e.target.value)} type=\"text\" value={studentRegNum} className={classnames('form-control', {\n                                            'is-invalid': errorsHelper.registrationNumber\n                                        })}\n                                            id=\"studentId\" />\n                                        {errorsHelper.registrationNumber && (\n                                            <div className=\"invalid-feedback\">{errorsHelper.registrationNumber}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"passwordId\">Password</label>\n                                        <input onChange={(e) => setStudentPassword(e.target.value)} value={studentPassword} className={classnames(\"form-control\", {\n                                            'is-invalid': errorsHelper.password\n                                        })}\n                                            type=\"password\" id=\"passwordId\" />\n                                        {errorsHelper.password && (\n                                            <div className=\"invalid-feedback\">{errorsHelper.password}</div>\n                                        )}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isStudentLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isStudentLoading && <button type=\"submit\" className=\"btn btn-info btn-block \">Login</button>}\n\n                                </form>\n                                <p className=\"text-center\"><Link className=\"text-center\" to=\"/forgotPassword/student\">Forgot Password</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FacultyStudentLoginPags\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport HomeHelper from '../Components/HomeHelper'\nimport { studentUpdatePassword } from '../redux/action/studentAction'\n\n\n\n\nconst StudentUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setError(store.errorHelper)\n            console.log(store.errorHelper)\n        }\n    }, [store.errorHelper])\n    const formHandler = (e) => {\n        e.preventDefault()\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-5 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n\n           \n\n        </div>\n    )\n}\n\nexport default StudentUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\nimport { facultyUpdatePassword } from '../redux/action/facultyAction'\n\n\n\n\nconst FacultyUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(facultyUpdatePassword({ registrationNumber: store.faculty.faculty.faculty.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    useEffect(() => {\n        \n    }, [store.faculty])\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div classNameName=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div classNameName=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div classNameName=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n</> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\nimport classnames from 'classnames'\n\n\nconst ForgotPassword = (props) => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [user, setUser] = useState('')\n    const [email, setEmail] = useState('')\n    const [otp, setOtp] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [errors, setErrors] = useState({})\n    const [helper, setHelper] = useState(false)\n\n    useEffect(() => {\n        setUser(props.match.params.user)\n    }, [user])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.student.flag) {\n            setHelper(true)\n        }\n    },[store.student.flag])\n\n    const sendOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(getOTPStudent({ email }))\n        }\n        else if (user === \"faculty\") {\n           dispatch(getOTPFaculty({email}))\n        }\n    }\n\n    const submitOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword },history))\n        }\n        else if (user === \"faculty\")\n        {\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\n            }\n    }\n\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 m-auto\">\n                    {!helper ? <>\n                        <form noValidate onSubmit={sendOTPHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\n                                    'is-invalid': errors.email\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\n                                {errors.email && (\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\n                                )}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\n                        </form>\n                    </> : <>\n                            <form noValidate onSubmit={submitOTPHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\n                                        'is-invalid': errors.otp\n                                    })} id=\"exampleInputEmail1\" />\n                                    {errors.otp && (\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.newPassword\n                                    })} id=\"exampleInputEmail2\" />\n                                    {errors.newPassword && (\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.confirmNewPassword\n                                    })} id=\"exampleInputEmail3\" />\n                                    {errors.confirmNewPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\n                                    )}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword)\n","import React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { getStudentByRegName } from '../redux/action/studentAction'\nimport HomeHelper from '../Components/HomeHelper'\n\nconst RecieverUserDetails = (props) => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [registrationNumber, setRegistrationNumber] = useState(\"\")\n  \n\n\n    useEffect(() => {\n        setRegistrationNumber(props.match.params.registrationNumber)\n        dispatch(getStudentByRegName(registrationNumber))\n        \n    }, [registrationNumber]) \n\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.student.regNumStudent.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.student.regNumStudent.name}</h5>\n                                            <h5 className=\"card-title\">{}</h5>\n                                            <Link to={`/chat/${store.student.regNumStudent.registrationNumber}.${store.student.student.student.registrationNumber}`}>CHAT</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.student.regNumStudent.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.student.regNumStudent.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.student.regNumStudent.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Year</td>\n                                                <td>{store.student.regNumStudent.year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.student.regNumStudent.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Section</td>\n                                                <td>{store.student.regNumStudent.section}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Batch</td>\n                                                <td>{store.student.regNumStudent.batch}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n\n\n\n            </> : (history.push('/'))}\n        </div>\n\n    )\n}\n\nexport default RecieverUserDetails\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport { studentUpdate, studentLogout,newerChats, previousChats } from '../redux/action/studentAction'\nimport HomeHelper from '../Components/HomeHelper'\n\nimport { useHistory, withRouter } from 'react-router-dom'\n\nconst StudentUpdateProfile = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [avatar, setAvatar] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [modal, setModal] = useState(false)\n    const imagehandler = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0]\n            setAvatar(img)\n        }\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const formHandler = async(e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"gender\", gender)\n        formData.append(\"studentMobileNumber\", studentMobileNumber)\n        formData.append(\"fatherName\", fatherName)\n        formData.append(\"fatherMobileNumber\", fatherMobileNumber)\n        formData.append(\"aadharCard\", aadharCard)\n        formData.append(\"avatar\", avatar)\n        formData.append(\"email\", store.student.student.student.email)\n        dispatch(studentUpdate(formData, history))\n        setModal(true)\n        alert(\"Kindly login again to see updates\")\n        dispatch(studentLogout())\n        history.push('/')\n    }\n        return (\n            <div>\n                {store.student.isAuthenticated ? <>\n                    <HomeHelper />\n                    <div className=\"container mt-5\">\n                        <div className=\"row \">\n                            <div className=\"col-md-5 w-100 m-auto\">\n                                <form onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"inputId\">Profile Picture</label>\n                                        <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"genderId\">Gender</label>\n                                        <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                            <option>Select</option>\n                                            <option value=\"Male\">Male</option>\n                                            <option value=\"Female\">Female</option>\n                                            <option value=\"Other\">Other</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"numberId\">Contact Number</label>\n                                        <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"fatherId\">Father Name</label>\n                                        <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" className=\"form-control\" id=\"fatherId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                        <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                        <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                    </div>\n                                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n                \n            </div>\n        )\n    }\n\nexport default withRouter(StudentUpdateProfile)\n","import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllSubjects } from '../../redux/action/studentAction'\nimport HomeHelper from '../../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentSubjectList = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    useEffect(() => {\n       dispatch(getAllSubjects())\n    },[])\n    return (\n        <>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Year</th>\n                                        <th scope=\"col\">Total Lectures</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.allSubjects.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.year}</td>\n                                                <td>{res.totalLectures}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n           \n            </>\n    )\n}\n\nexport default StudentSubjectList\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst FacultyUploadMarks = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch() \n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [marks, setMarks] = useState([])\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [totalMarks, setTotalMarks] = useState()\n    const [exam ,setExam] = useState(\"\")\n    const [error, setError] = useState({})\n    const [errorHelper, setErrorHelper] = useState({})\n\n   \n\n\n    const handleInputChange = (value, _id) => {\n    \n        const newMarks = [...marks]\n        let index = newMarks.findIndex(m => m._id === _id)\n        if (index === -1) {\n            newMarks.push({ _id, value })\n        }\n        else {\n           newMarks[index].value = value\n        }\n        setMarks(newMarks)\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n    \n       dispatch(fetchStudents(department, year,  section))\n\n    }\n\n\n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, department, section\n        ))\n    }\n\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"bramchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"semesterId\">Semester</label>\n                                <select onChange={(e) => setSemester(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.semester\n\n                                    })} id=\"semesterId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                </select>\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select onChange={(e) => setSubjectCode(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.subjectCode\n\n                                    })} id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                                {errorHelper.subjectCode && (<div classNameName=\"invalid-feedback\">{errorHelper.subjectCode}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"examId\">Exam</label>\n                                <select onChange={(e) => setExam(e.target.value)} value={exam} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.exam\n\n                                    })} id=\"examId\">\n                                    <option>Select</option>\n                                    <option value=\"CycleTest1\">Cycle Test 1</option>\n                                    <option value=\"CycleTest2\">Cylce Test 2</option>\n                                    <option value=\"Semester\">Semester</option>\n                                </select>\n                                {errorHelper.exam && (<div classNameName=\"invalid-feedback\">{errorHelper.exam}</div>)}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"marksId\">Total Marks</label>\n                                <input type=\"number\" className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.totalMarks\n\n                                    })} id=\"marksId\"\n                                    value={totalMarks} onChange={(e) => setTotalMarks(e.target.value)} />\n                                {errorHelper.totalMarks && (<div classNameName=\"invalid-feedback\">{errorHelper.totalMarks}</div>)}\n                            </div>\n\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                        <th scope=\"col\">Marks</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr key={index}>\n                                                <td>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-control\" required type=\"number\" value={obj.marks} onChange={(e) => handleInputChange(e.target.value, obj._id)} id=\"defaultCheck1\" />\n                                                </div></td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <button type=\"submit\" className=\"btn btn-primary ml-1\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n                }\n            </> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUploadMarks\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\n\n\nimport { facultyUpdate, facultyLogout} from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\n\n\nconst FacultyUpdateProfile = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [gender, setGender] = useState('')\n    const [facultyMobileNumber, setContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const imagehandler = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0]\n            setAvatar(img)\n        }\n    }\n\n\n    const formHandler = async (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"gender\", gender)\n        formData.append(\"facultyMobileNumber\", facultyMobileNumber)\n        formData.append(\"aadharCard\", aadharCard)\n        formData.append(\"avatar\", avatar)\n        formData.append(\"email\", store.faculty.faculty.faculty.email)\n        setIsLoading(true)\n        dispatch(facultyUpdate(formData, history))\n        alert(\"Kindly login again to see updates\")\n        dispatch(facultyLogout())\n        history.push('/')\n    }\n\n    useEffect(() => {\n        if (store.faculty.updateProfileFlag) {\n            setIsLoading(false)\n        }\n    }, [store.faculty.updateProfileFlag])\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col-md-5 w-100 m-auto\">\n                            <form onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"inputId\">Profile Picture</label>\n                                    <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"genderId\">Gender</label>\n                                    <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                        <option>Select</option>\n                                        <option value=\"Male\">Male</option>\n                                        <option value=\"Female\">Female</option>\n                                        <option value=\"Other\">Other</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"numberId\">Contact Number</label>\n                                    <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                    <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Update</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default withRouter(FacultyUpdateProfile)\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getMarks } from '../../redux/action/studentAction'\nimport HomeHelper from '../../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentTestPerformance = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getMarks())\n    }, [])\n\n\n\n    return (\n\n        <>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n\n                <div className=\"container\">\n\n                    {store.student.allMarks.CycleTest1 &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.CycleTest1.length !== 0 ? <>\n                                    <h4>Cycle Test 1</h4>\n                                    <table className=\"table border\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.CycleTest1.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n\n\n                    }\n\n                    {store.student.allMarks.CycleTest2 &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.CycleTest2.length !== 0 ? <>\n                                    <h4>Cycle Test 2</h4>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.CycleTest2.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n                    }\n\n                    {store.student.allMarks.Semester &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.Semester.length !== 0 ? <>\n                                    <h4>Semester</h4>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.Semester.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{((res.marks / res.totalMarks) * 100).toFixed(2)}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n\n                    }\n                </div></> : (history.push('/'))}\n\n        </>\n\n    )\n}\n\nexport default StudentTestPerformance\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddAdmin } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\n\n\n\nconst AdminAddAdmin = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [dob, setDob] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n        else {\n            setError({})\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddAdmin({\n            name,\n            email,\n            department,\n            contactNumber,\n            dob: dob.split(\"-\").reverse().join(\"-\")\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddAdminFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddAdminFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddAdminFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.adminAddAdminFlag])\n\n    return (\n\n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Admin Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"MCA\">MCA</option>\n                                                <option value=\"MBA\">MBA</option>\n                                                <option value=\"M.TECH\">M.TECH</option>\n                                                <option value=\"M.COM\">M.COM</option>\n                                                <option value=\"M.ARCH\">M.ARCH</option>\n                                                <option value=\"M.ED\">M.ED</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.contactNumber\n                                                })} id=\"numberId\" />\n                                            {error.contactNumber && (<div className=\"invalid-feedback\">{error.contactNumber}</div>)}\n                                        </div>\n                                    </div>\n                                </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Admin</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>) : (history.push('/'))}\n\n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddAdmin\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllFaculty } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllFaculty({ department }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allFaculty.length !== 0) {\n            setIsLoading(false)\n        }\n        \n    }, [store.admin.allFaculty.length])\n\n    \n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form form-inline noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">Department</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"MCA\">MCA</option>\n                                        <option value=\"MBA\">MBA</option>\n                                        <option value=\"M.TECH\">M.TECH</option>\n                                        <option value=\"M.COM\">M.COM</option>\n                                        <option value=\"M.ARCH\">M.ARCH</option>\n                                        <option value=\"M.ED\">M.ED</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            \n                            {store.admin.allFaculty.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Joining Year</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allFaculty.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.joiningYear}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n                           \n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllStudent } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    \n    \n\n    const [error, setError] = useState({})\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllStudent({ department, year }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allStudent.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allStudent.length])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">Department</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"MCA\">MCA</option>\n                                        <option value=\"MBA\">MBA</option>\n                                        <option value=\"M.TECH\">M.TECH</option>\n                                        <option value=\"M.COM\">M.COM</option>\n                                        <option value=\"M.ARCH\">M.ARCH</option>\n                                        <option value=\"M.ED\">M.ED</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"yearId\">Year</label>\n                                    <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.year\n                                        })} id=\"yearId\">\n                                        <option>Select</option>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                    </select>\n                                    {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                              \n                               \n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n\n                            {store.admin.allStudent.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Section</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allStudent.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.section}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllSubject } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllSubjects = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllSubject({ department, year }))\n\n    }\n    useEffect(() => {\n        if (store.admin.allSubject.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allSubject.length])\n    return (\n        <div>\n            <div>\n                {store.admin.isAuthenticated ? <>\n                    <AdminHomeHelper />\n                    <div className=\"container\">\n                        <div className=\"row mt-5\">\n                            <div className=\"col-md-4\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">Department</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"MCA\">MCA</option>\n                                            <option value=\"MBA\">MBA</option>\n                                            <option value=\"M.TECH\">M.TECH</option>\n                                            <option value=\"M.COM\">M.COM</option>\n                                            <option value=\"M.ARCH\">M.ARCH</option>\n                                            <option value=\"M.ED\">M.ED</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                                   \n                                </form>\n\n\n                            </div>\n                            <div className=\"col-md-8\">\n\n                                {store.admin.allSubject.length !== 0 && <table className=\"table border\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">S.No</th>\n                                            <th scope=\"col\">Subject Code</th>\n                                            <th scope=\"col\">Subject Name</th>\n                                            <th scope=\"col\">Total Lectures</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            store.admin.allSubject.map((res, index) =>\n                                                <tr key={index}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{res.subjectCode}</td>\n                                                    <td>{res.subjectName}</td>\n                                                    <td>{res.totalLectures}</td>\n                                                </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>}\n\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AdminGetAllSubjects\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\n\nconst AdminHome = () => {\n    const store = useSelector((store) => store)\n\n    const history = useHistory()\n    return (\n        <div>\n           \n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-2\">\n                        </div>\n                        <div className=\"col-8\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.admin.admin.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.admin.admin.name}</h5>\n                                            <h5 className=\"card-title\">{store.admin.admin.registrationNumber}</h5>\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.admin.admin.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.admin.admin.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.admin.admin.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.admin.admin.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.admin.admin.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.admin.admin.contactNumber ?\n                                                    store.admin.admin.contactNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-2\">\n                        </div>\n                    </div>\n                </div>\n                </> : (history.push('/'))}\n                \n        </div>\n    )\n}\n\nexport default AdminHome\n","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './redux/utils/setAuthToken'\nimport store from './redux/store'\n\nimport { setFacultyUser, facultyLogout } from './redux/action/facultyAction'\n\nimport { setAdminUser, adminLogout, adminGetAllStudent } from './redux/action/adminAction'\n\nimport { setStudentUser, studentLogout } from './redux/action/studentAction'\n\n\nimport LoginPage from './Pages/LoginPage'\nimport Home from './Pages/StudentHome'\n\n\nimport StudentDetails from './Pages/StudentDetails'\nimport facultyInterface from './Pages/FacultyInterface'\nimport AttendenceFaculty from './Pages/AttendenceFaculty'\n\nimport AdminAddStudent from './Pages/AdminAddStudent'\nimport AdminAddFaculty from './Pages/AdminAddFaculty'\nimport AdminAddSubject from './Pages/AdminAddSubject'\nimport StudentAttendencePage from './Pages/StudentAttendencePage'\nimport FacultyStudentLoginPags from './Pages/FacultyStudentLoginPags'\nimport StudentUpdatePassword from './Pages/StudentUpdatePassword'\nimport FacultyUpdatePassword from './Pages/FacultyUpdatePassword'\nimport ForgotPassword from './Pages/ForgotPassword'\nimport Chat from './Pages/Chat'\nimport RecieverUserDetails from './Pages/RecieverUserDetails'\nimport StudentUpdateProfile from './Pages/StudentUpdateProfile'\n \nimport StudentSubjectList from './Pages/Student/StudentSubjectList'\n\nimport FacultyUploadMarks from './Pages/Faculty/FacultyUploadMarks'\n\nimport FacultyUpdateProfile from './Pages/Faculty/FacultyUpdateProfile'\n\nimport StudentTestPerformace from './Pages/Student/StudentTestPerformance'\n\nimport AdminAddAdmin from './Pages/Admin/AdminAddAdmin'\n\nimport AdminGetAllFaculty from './Pages/Admin/AdminGetAllFaculty'\n\nimport AdminGetAllStudent from './Pages/Admin/AdminGetAllStudents'\n\nimport AdminGetAllSubject from './Pages/Admin/AdminGetAllSubjects'\n\nimport AdminHome from './Pages/Admin/AdminHome'\n \nif (window.localStorage.facultyJwtToken) {\n  setAuthToken(localStorage.facultyJwtToken);\n  const decoded = jwt_decode(localStorage.facultyJwtToken);\n \n  store.dispatch(setFacultyUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(facultyLogout());\n    window.location.href = '/';\n  }\n}\nelse if (window.localStorage.studentJwtToken) {\n  setAuthToken(localStorage.studentJwtToken);\n  const decoded = jwt_decode(localStorage.studentJwtToken);\n\n  store.dispatch(setStudentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(studentLogout());\n    window.location.href = '/';\n  } \n}\nelse if (window.localStorage.adminJwtToken) {\n  setAuthToken(localStorage.adminJwtToken);\n  const decoded = jwt_decode(localStorage.adminJwtToken);\n\n  store.dispatch(setAdminUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(adminLogout());\n    window.location.href = '/';\n  } \n}\n\nfunction App() {\n  const store = useSelector((store)=>store)\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={FacultyStudentLoginPags} />\n          <Route exact path='/adminLogin' component={LoginPage} />\n          <Route exact path='/home' component={Home} />\n          <Route exact path='/student/updateProfile' component={StudentUpdateProfile} />\n          <Route exact path=\"/studentDetails\" component={StudentDetails} />\n          <Route exact path='/faculty' component={facultyInterface} />\n          <Route exact path='/attendenceFaculty' component={AttendenceFaculty} />\n          <Route exact path='/admin' component={AdminHome} />\n          <Route exact path=\"/admin/addStudent\" component={AdminAddStudent} />\n          <Route exact path=\"/admin/addFaculty\" component={AdminAddFaculty} />\n          <Route exact path=\"/admin/addSubject\" component={AdminAddSubject} />\n          <Route exact path=\"/admin/addAdmin\" component={AdminAddAdmin} />\n          <Route exact path=\"/admin/allFaculties\" component={AdminGetAllFaculty} />\n          <Route exact path=\"/admin/allStudents\" component={AdminGetAllStudent} />\n          <Route exact path=\"/admin/allSubject\" component={AdminGetAllSubject} />\n          <Route exact path=\"/student/attendence\" component={StudentAttendencePage} />\n          <Route exact path=\"/student/updatePassword\" component={StudentUpdatePassword} />\n          <Route exact path=\"/student/testPerformance\" component={StudentTestPerformace} />\n          <Route exact path=\"/faculty/updatePassword\" component={FacultyUpdatePassword} />\n          <Route exact path=\"/faculty/uploadMarks\" component={FacultyUploadMarks} />\n          <Route exact path=\"/faculty/updateProfile\" component={FacultyUpdateProfile} />\n          <Route exact path=\"/student/getAllSubjects\" component={StudentSubjectList} />\n          <Route exact path=\"/forgotPassword/:user\" component={ForgotPassword} />\n          <Route exact path=\"/chat/:room\" component={Chat} />\n          <Route exact path=\"/student/:registrationNumber\" component={RecieverUserDetails} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}